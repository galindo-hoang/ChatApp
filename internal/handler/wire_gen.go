// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package handler

import (
	"github.com/ChatService/internal/configs"
	"github.com/ChatService/internal/dataaccess"
	"github.com/ChatService/internal/dataaccess/cache"
	"github.com/ChatService/internal/dataaccess/database"
	"github.com/ChatService/internal/dataaccess/services"
	"github.com/ChatService/internal/logic"
	"github.com/google/wire"
)

// Injectors from wire.go:

func GetAccountLogic(path configs.ConfigFilePath) (logic.Account, func(), error) {
	config, err := configs.NewConfig(path)
	if err != nil {
		return nil, nil, err
	}
	configsDatabase := config.Database
	db, cleanup, err := database.InitializeDB(configsDatabase)
	if err != nil {
		return nil, nil, err
	}
	gormDB, err := database.InitializeGorm(db, configsDatabase)
	if err != nil {
		cleanup()
		return nil, nil, err
	}
	auth := config.Auth
	hash := logic.NewHash(auth)
	token, err := logic.NewToken(auth)
	if err != nil {
		cleanup()
		return nil, nil, err
	}
	grpc := config.Grpc
	relationshipServiceClient, cleanup2, err := services.InitializeRelationshipClient(grpc)
	if err != nil {
		cleanup()
		return nil, nil, err
	}
	takenAccountEmail := cache.NewTakenAccountEmail()
	accountDataAccessor := database.InitializeAccountDataAccessor(gormDB)
	account := logic.NewAccount(gormDB, hash, token, relationshipServiceClient, takenAccountEmail, accountDataAccessor)
	return account, func() {
		cleanup2()
		cleanup()
	}, nil
}

func GetRelationshipLogic(path configs.ConfigFilePath) (logic.Relationship, func(), error) {
	config, err := configs.NewConfig(path)
	if err != nil {
		return nil, nil, err
	}
	graphDataBase := config.GraphDB
	driverWithContext, cleanup, err := database.InitializeGraphDB(graphDataBase)
	if err != nil {
		return nil, nil, err
	}
	relationshipDataAccessor := database.InitializeRelationshipDataAccessor(driverWithContext)
	relationship := logic.NewRelationship(relationshipDataAccessor)
	return relationship, func() {
		cleanup()
	}, nil
}

// wire.go:

var WireSet = wire.NewSet(logic.WireSet, configs.Wireset, dataaccess.WireSet)
